using Microsoft.VisualStudio.TestTools.UnitTesting;
using PinPadEmulator.Commands;
using PinPadEmulator.Commands.Responses;
using System;

namespace PinPadEmulatorTests.Responses
{
	[TestClass]
	public class GoOnChipResponseTests
	{
		[TestMethod]
		public void TestGoOnChipResponse()
		{
			var response = new GoOnChipResponse();

			response.Decision.Value = GoOnChipDecision.RequireOnlineAuthorization;
			response.ShouldRequestSignature.Value = false;
			response.PinWasValidatedOffline.Value = true;
			response.InvalidOfflinePinValidations.Value = 0;
			response.OfflinePinWasBlocked.Value = false;
			response.OnlinePinWasCaptured.Value = false;
			response.EncryptedPin.Value = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
			response.KeySerialNumber.Value = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
			response.EMVData.Value = new byte[] { 0x5F, 0x2A, 0x02, 0x09, 0x86, 0x82, 0x02, 0x5C, 0x00, 0x95, 0x05, 0x40, 0x80, 0x00, 0x80, 0x00, 0x9A, 0x03, 0x17, 0x09, 0x23, 0x9C, 0x01, 0x00, 0x9F, 0x02, 0x06, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x9F, 0x10, 0x07, 0x06, 0x05, 0x0A, 0x03, 0xA4, 0xA8, 0x00, 0x9F, 0x1A, 0x02, 0x00, 0x76, 0x9F, 0x26, 0x08, 0xB4, 0x66, 0xD3, 0x7C, 0xBA, 0x56, 0xC9, 0x66, 0x9F, 0x33, 0x03, 0xE0, 0xF0, 0xC8, 0x9F, 0x36, 0x02, 0x00, 0x2F, 0x9F, 0x37, 0x04, 0xFD, 0xEF, 0x08, 0xCD, 0x9F, 0x27, 0x01, 0x80, 0x9F, 0x34, 0x03, 0x41, 0x03, 0x02, 0x5F, 0x34, 0x01, 0x00 };
			response.AcquirerData.Value = string.Empty;

			var command = response.ToString();
			var expected = "GOC0002302010000000000000000000000000000000000000000915F2A02098682025C00950540800080009A031709239C01009F02060000000010009F100706050A03A4A8009F1A0200769F2608B466D37CBA56C9669F3303E0F0C89F3602002F9F3704FDEF08CD9F2701809F34034103025F340100000";
			Assert.AreEqual(expected, command);
		}
	}
}
